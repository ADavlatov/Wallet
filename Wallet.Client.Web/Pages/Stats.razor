@page "/stats"
@using BlazorBootstrap

<div class="container-fluid overflow-x-auto" style="display: flex">
    <div style="display: inline-block; width: 50%;">
        <LineChart @ref="lineChart" Width="900"/>
    </div>
    <div style="display: inline-block; width: 50%;">
        <PieChart @ref="pieChart2" Width="500"/>
    </div>
</div>

@code {
    private LineChart lineChart = default!;
    private LineChartOptions lineChartOptions = default!;
    private ChartData chartData = default!;

    private PieChart pieChart2 = default!;
    private PieChartOptions pieChartOptions2 = default!;
    private ChartData chartData2 = default!;

    protected override void OnInitialized()
    {
        var colors = ColorUtility.CategoricalTwelveColors;

        // Data for Line Chart
        var labels = new List<string> { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
        var datasets = new List<IChartDataset>();

        var dataset1 = new LineChartDataset
        {
            Label = "Расходы",
            Data = new List<double?> { 7265791, 5899643, 6317759, 6315641, 5338211, 8496306, 7568556, 8538933, 8274297, 8657298, 7548388, 7764845 },
            BackgroundColor = colors[0],
            BorderColor = colors[0],
            BorderWidth = 2,
            HoverBorderWidth = 4,
        };
        datasets.Add(dataset1);

        var dataset2 = new LineChartDataset
        {
            Label = "Доходы",
            Data = new List<double?> { 1809499, 1816642, 2122410, 1809499, 1850793, 1846743, 1954797, 2391313, 1983430, 2469918, 2633303, 2821149 },
            BackgroundColor = colors[1],
            BorderColor = colors[1],
            BorderWidth = 2,
            HoverBorderWidth = 4,
        };
        datasets.Add(dataset2);

        chartData = new ChartData { Labels = labels, Datasets = datasets };

        lineChartOptions = new();
        lineChartOptions.Responsive = true;
        lineChartOptions.Interaction = new Interaction { Mode = InteractionMode.Index };

        lineChartOptions.Plugins.Title!.Text = "Операции за 2024";
        lineChartOptions.Plugins.Title.Display = true;

        // Data for Pie Chart
        var labels2 = new List<string> { "Категория 1", "Категория 2" };
        var datasets2 = new List<IChartDataset>();

        // Calculate total expenses and incomes
        double totalExpenses = 0;
        foreach (var expense in new List<double?> { 7265791, 5899643, 6317759, 6315641, 5338211, 8496306, 7568556, 8538933, 8274297, 8657298, 7548388, 7764845 })
        {
            totalExpenses += expense ?? 0;
        }

        double totalIncomes = 0;
        foreach (var income in new List<double?> { 1809499, 1816642, 2122410, 1809499, 1850793, 1846743, 1954797, 2391313, 1983430, 2469918, 2633303, 2821149 })
        {
            totalIncomes += income ?? 0;
        }

        var dataset3 = new PieChartDataset
        {
            Label = "Расходы по категориям",
            Data = new List<double?> { totalExpenses, totalIncomes },
            BackgroundColor = new List<string> { colors[0], colors[1] },
            BorderColor = new List<string> { colors[0], colors[1] },
            BorderWidth = new List<double> { 2, 2 },
            HoverBorderWidth = new List<double> { 4, 4 },
        };
        datasets2.Add(dataset3);

        chartData2 = new ChartData { Labels = labels2, Datasets = datasets2 };

        pieChartOptions2 = new();
        pieChartOptions2.Responsive = true;
        pieChartOptions2.Plugins.Title!.Text = "Расходы по категориям за 2024 год";
        pieChartOptions2.Plugins.Title.Display = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await lineChart.InitializeAsync(chartData, lineChartOptions);
            await pieChart2.InitializeAsync(chartData2, pieChartOptions2);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

}