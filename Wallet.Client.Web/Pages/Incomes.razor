@page "/Incomes"

<PageTitle>Доходы</PageTitle>

<h3>Доходы</h3>

<div class="add-block">
    <h2>Добавить новый элемент</h2>

    <div class="category-input">
        <label for="category">Категория:</label>
        <InputSelect id="category" @bind-Value="newItem.CategoryId">
            <option value="">-- Выберите категорию --</option>
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
    </div>

    <div class="amount-input">
        <label for="amount">Сумма:</label>
        <InputNumber id="amount" @bind-Value="newItem.Amount"/>
    </div>

    <div class="date-input">
        <label for="date">Дата:</label>
        <InputDate id="date" @bind-Value="newItem.Date"/>
    </div>

    <div class="name-input">
        <label for="name">Имя (необязательно):</label>
        <InputText id="name" @bind-Value="newItem.Name"/>
    </div>

    <button @onclick="AddItem">Добавить элемент</button>

    <div class="add-category-button">
        <button @onclick="OpenCategoryModal">Добавить категорию</button>
    </div>
</div>

<div class="items-list">
    <h2>Список элементов</h2>
    @if (items.Any())
    {
        <table>
            <thead>
            <tr>
                <th>Категория</th>
                <th>Имя</th>
                <th>Сумма</th>
                <th>Дата</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@GetCategoryName(item.CategoryId)</td>
                    <td>@item.Name</td>
                    <td>@item.Amount</td>
                    <td>@item.Date.ToShortDateString()</td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p>Список элементов пуст.</p>
    }
</div>

@if (showCategoryModal)
{
    <div class="category-modal">
        <div class="modal-content">
            <span class="close-button" @onclick="CloseCategoryModal">&times;</span>
            <h3>Добавить категорию</h3>
            <div class="category-name-input">
                <label for="categoryName">Имя категории:</label>
                <InputText id="categoryName" @bind-Value="newCategoryName"/>
            </div>
            <button @onclick="AddCategory">Создать категорию</button>
        </div>
    </div>
}

@code {

    private List<Category> categories = new List<Category>()
    {
        new Category { Id = 1, Name = "Еда" },
        new Category { Id = 2, Name = "Транспорт" },
        new Category { Id = 3, Name = "Развлечения" }
    };

    private List<Item> items = new List<Item>();

    private NewItem newItem = new NewItem();

    private bool showCategoryModal = false;
    private string newCategoryName = "";

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public class Item
    {
        public int CategoryId { get; set; }
        public string Name { get; set; }
        public decimal Amount { get; set; }
        public DateTime Date { get; set; }
    }

    public class NewItem
    {
        public int CategoryId { get; set; }
        public string? Name { get; set; }
        public decimal Amount { get; set; }
        public DateTime Date { get; set; } = DateTime.Now;
    }


    private void AddItem()
    {
        items.Add(new Item()
        {
            CategoryId = newItem.CategoryId,
            Name = newItem.Name,
            Amount = newItem.Amount,
            Date = newItem.Date
        });
        newItem = new NewItem(); // Очистка формы после добавления
    }

    private string GetCategoryName(int categoryId)
    {
        var category = categories.FirstOrDefault(c => c.Id == categoryId);
        return category?.Name ?? "Неизвестная категория";
    }

    private void OpenCategoryModal()
    {
        showCategoryModal = true;
    }

    private void CloseCategoryModal()
    {
        showCategoryModal = false;
    }

    private void AddCategory()
    {
        if (!string.IsNullOrWhiteSpace(newCategoryName))
        {
            categories.Add(new Category { Id = categories.Max(c => c.Id) + 1, Name = newCategoryName });
            newCategoryName = "";
            CloseCategoryModal();
        }
    }

}